package com.opencn.mesh;import com.google.common.util.concurrent.ThreadFactoryBuilder;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import java.util.concurrent.ExecutorService;import java.util.concurrent.LinkedBlockingQueue;import java.util.concurrent.ThreadFactory;import java.util.concurrent.ThreadPoolExecutor;import java.util.concurrent.TimeUnit;@Configurationpublic class ThreadPoolConfig {    public static String THREAD_NAME = "pipeline-thread-%d";    public static final int CORE_POOL_SIZE = Runtime.getRuntime().availableProcessors() * 2 + 1;    public static int MAX_POOL_SIZE = 100;    public static int QUEUE_SIZE = 10;    @Bean(value = "pipelineExecutor")    public ExecutorService pipelineExecutor() {        ThreadFactory threadFactory = new ThreadFactoryBuilder().setNameFormat(THREAD_NAME).build();        return new ThreadPoolExecutor(                CORE_POOL_SIZE,                MAX_POOL_SIZE,                0L,                TimeUnit.SECONDS,                new LinkedBlockingQueue<>(QUEUE_SIZE),                threadFactory,                new ThreadPoolExecutor.CallerRunsPolicy());    }}