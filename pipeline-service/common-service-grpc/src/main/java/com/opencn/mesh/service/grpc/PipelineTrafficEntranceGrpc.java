package com.opencn.mesh.service.grpc;import com.alipay.sofa.rpc.boot.runtime.param.BoltBindingParam;import com.alipay.sofa.runtime.api.annotation.SofaClientFactory;import com.alipay.sofa.runtime.api.client.ReferenceClient;import com.alipay.sofa.runtime.api.client.param.BindingParam;import com.alipay.sofa.runtime.api.client.param.ReferenceParam;import com.opencn.mesh.grpc.BizCommonServiceGrpc;import com.opencn.mesh.grpc.PipelineRequest;import com.opencn.mesh.grpc.PipelineResponse;import com.opencn.mesh.log.PipelineLogger;import com.opencn.mesh.service.BizCommonService;import io.grpc.stub.StreamObserver;import org.lognet.springboot.grpc.GRpcService;@GRpcServicepublic class PipelineTrafficEntranceGrpc extends BizCommonServiceGrpc.BizCommonServiceImplBase {    @SofaClientFactory    private ReferenceClient referenceClient;    @Override    public void req(PipelineRequest request, StreamObserver<PipelineResponse> responseObserver) {        com.opencn.mesh.model.PipelineRequest pipelineRequest = com.opencn.mesh.model.PipelineRequest.builder()                .build();        try {            BizCommonService proxy = getProxy(request);            com.opencn.mesh.model.PipelineResponse response = proxy.invoke(pipelineRequest);            PipelineLogger.debug("[pipeline] req success with bizIdentify:{} bizKey:{}",                    pipelineRequest.getBizIdentify(), pipelineRequest.getBizKey(), pipelineRequest.getBizData());        } catch (Exception e) {            PipelineLogger.error("[pipeline] req error with bizIdentify:{} bizKey:{} cause {}",                    pipelineRequest.getBizIdentify(), pipelineRequest.getBizKey(), e.getMessage());        }        super.req(request, responseObserver);    }    private BizCommonService getProxy(PipelineRequest pipelineRequest) {        ReferenceParam<BizCommonService> referenceParam = new ReferenceParam<>();        referenceParam.setInterfaceType(BizCommonService.class);        referenceParam.setUniqueId(pipelineRequest.getBizIdentify());        referenceParam.setJvmFirst(true);        BindingParam boltBindingParam = new BoltBindingParam();        referenceParam.setBindingParam(boltBindingParam);        return referenceClient.reference(referenceParam);    }}