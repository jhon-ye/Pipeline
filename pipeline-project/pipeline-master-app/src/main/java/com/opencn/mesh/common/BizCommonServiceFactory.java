package com.opencn.mesh.common;import com.alipay.sofa.rpc.boot.runtime.param.BoltBindingParam;import com.alipay.sofa.rpc.common.RpcConstants;import com.alipay.sofa.runtime.api.annotation.SofaClientFactory;import com.alipay.sofa.runtime.api.client.ReferenceClient;import com.alipay.sofa.runtime.api.client.param.BindingParam;import com.alipay.sofa.runtime.api.client.param.ReferenceParam;import com.opencn.mesh.callback.RpcCallback;import com.opencn.mesh.service.BizCommonService;import org.springframework.stereotype.Component;import java.util.Map;import java.util.concurrent.ConcurrentHashMap;@Componentpublic class BizCommonServiceFactory {    @SofaClientFactory    private ReferenceClient referenceClient;    private static final Map<String,BizCommonService> SYNC_CACHE = new ConcurrentHashMap<>();    private static final Map<String,BizCommonService> ASYNC_CACHE = new ConcurrentHashMap<>();    public BizCommonService getProxy(String bizIdentify) {        if (SYNC_CACHE.containsKey(bizIdentify)) {            return SYNC_CACHE.get(bizIdentify);        }        ReferenceParam<BizCommonService> referenceParam = new ReferenceParam<>();        referenceParam.setInterfaceType(BizCommonService.class);        referenceParam.setUniqueId(bizIdentify);        referenceParam.setJvmFirst(true);        BoltBindingParam boltBindingParam = new BoltBindingParam();        boltBindingParam.setConnectTimeout(50000);        boltBindingParam.setTimeout(50000);        boltBindingParam.setRetries(3);        referenceParam.setBindingParam(boltBindingParam);        BizCommonService reference = referenceClient.reference(referenceParam);        SYNC_CACHE.put(bizIdentify, reference);        return reference;    }    public BizCommonService getProxy(String bizIdentify, Boolean isSync) {        if (ASYNC_CACHE.containsKey(bizIdentify)) {            return ASYNC_CACHE.get(bizIdentify);        }        ReferenceParam<BizCommonService> referenceParam = new ReferenceParam<>();        referenceParam.setInterfaceType(BizCommonService.class);        referenceParam.setUniqueId(bizIdentify);        BoltBindingParam boltBindingParam = new BoltBindingParam();        boltBindingParam.setConnectTimeout(50000);        boltBindingParam.setTimeout(50000);        boltBindingParam.setRetries(3);        if (!isSync) {            boltBindingParam.setType(RpcConstants.INVOKER_TYPE_CALLBACK);            boltBindingParam.setCallbackClass(RpcCallback.class.getName());        }        referenceParam.setBindingParam(boltBindingParam);        BizCommonService reference = referenceClient.reference(referenceParam);        ASYNC_CACHE.put(bizIdentify, reference);        return reference;    }}