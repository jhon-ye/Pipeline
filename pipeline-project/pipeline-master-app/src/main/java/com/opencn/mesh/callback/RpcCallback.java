package com.opencn.mesh.callback;import com.alipay.sofa.rpc.core.exception.SofaRpcException;import com.alipay.sofa.rpc.core.invoke.SofaResponseCallback;import com.alipay.sofa.rpc.core.request.RequestBase;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.opencn.mesh.endpoint.TrafficEndPoint;import com.opencn.mesh.log.PipelineLoggerFactory;import org.slf4j.Logger;public class RpcCallback implements SofaResponseCallback {    private static final Logger pipelineLogger = PipelineLoggerFactory.getLogger(TrafficEndPoint.class);    private static final Gson G = new GsonBuilder().setDateFormat("yyyy-MM-dd HH:mm:ss").create();    @Override    public void onAppResponse(Object appResponse, String methodName, RequestBase request) {        pipelineLogger.debug("[pipeline] callback response {}" , G.toJson(appResponse));    }    @Override    public void onAppException(Throwable throwable, String methodName, RequestBase request) {        pipelineLogger.error("[pipeline] callback error {}" , G.toJson(throwable.getMessage()));    }    @Override    public void onSofaException(SofaRpcException sofaException, String methodName, RequestBase request) {        pipelineLogger.error("[pipeline] rpc callback error {}" , sofaException.getMessage());    }}