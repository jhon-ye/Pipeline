package com.opencn.mesh.handler;import com.opencn.mesh.constants.PipelineConstant;import com.opencn.mesh.exception.PipelineException;import com.opencn.mesh.util.ThreadLocalUtils;import org.springframework.stereotype.Component;import org.springframework.util.StringUtils;import org.springframework.web.servlet.HandlerInterceptor;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.util.HashMap;import java.util.Map;@Componentpublic class RequestHeaderHandler implements HandlerInterceptor {    @Override    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {        String bizIdentify = request.getHeader(PipelineConstant.BIZ_IDENTIFY);        String bizKey = request.getHeader(PipelineConstant.BIZ_KEY);        if (!StringUtils.hasText(bizIdentify)) {            throw new PipelineException("request header not contains value of key named biz-identify");        }        if (!StringUtils.hasText(bizKey)) {            throw new PipelineException("request header not contains value of key named biz-key");        }//        Map<String, String> bizInfo = new HashMap<>(2);//        bizInfo.put(PipelineConstant.BIZ_IDENTIFY, bizIdentify);//        bizInfo.put(PipelineConstant.BIZ_KEY, bizKey);//        ThreadLocalUtils.set(bizInfo);        return true;    }    @Override    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {        ThreadLocalUtils.remove();    }}