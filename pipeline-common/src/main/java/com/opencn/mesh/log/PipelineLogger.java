package com.opencn.mesh.log;import org.slf4j.Logger;@Deprecatedpublic class PipelineLogger {    /** SOFA Default Logger */    private static final Logger DEFAULT_LOG = PipelineLoggerFactory.getLogger("com.opencn.mesh");    public static boolean isDebugEnabled() {        return DEFAULT_LOG.isDebugEnabled();    }    public static void debug(String msg) {        DEFAULT_LOG.debug(msg);    }    public static void debug(String format, Object arg) {        DEFAULT_LOG.debug(format, arg);    }    public static void debug(String format, Object arg1, Object arg2) {        DEFAULT_LOG.debug(format, arg1, arg2);    }    public static void debug(String format, Object... arguments) {        DEFAULT_LOG.debug(format, arguments);    }    public static void debug(String msg, Throwable t) {        DEFAULT_LOG.debug(msg, t);    }    public static boolean isInfoEnabled() {        return DEFAULT_LOG.isInfoEnabled();    }    public static void info(String msg) {        DEFAULT_LOG.info(msg);    }    public static void info(String format, Object arg) {        DEFAULT_LOG.info(format, arg);    }    public static void info(String format, Object arg1, Object arg2) {        DEFAULT_LOG.info(format, arg1, arg2);    }    public static void info(String format, Object... arguments) {        DEFAULT_LOG.info(format, arguments);    }    public static void info(String msg, Throwable t) {        DEFAULT_LOG.info(msg, t);    }    public static boolean isWarnEnabled() {        return DEFAULT_LOG.isWarnEnabled();    }    public static void warn(String msg) {        DEFAULT_LOG.warn(msg);    }    public static void warn(String format, Object arg) {        DEFAULT_LOG.warn(format, arg);    }    public static void warn(String format, Object... arguments) {        DEFAULT_LOG.warn(format, arguments);    }    public static void warn(String format, Object arg1, Object arg2) {        DEFAULT_LOG.warn(format, arg1, arg2);    }    public static void warn(String msg, Throwable t) {        DEFAULT_LOG.warn(msg, t);    }    public static boolean isErrorEnabled() {        return DEFAULT_LOG.isErrorEnabled();    }    public static void error(String msg) {        DEFAULT_LOG.error(msg);    }    public static void error(String format, Object arg) {        DEFAULT_LOG.error(format, arg);    }    public static void error(String format, Object arg1, Object arg2) {        DEFAULT_LOG.error(format, arg1, arg2);    }    public static void error(String format, Object... arguments) {        DEFAULT_LOG.error(format, arguments);    }    public static void error(String msg, Throwable t) {        DEFAULT_LOG.error(msg, t);    }}